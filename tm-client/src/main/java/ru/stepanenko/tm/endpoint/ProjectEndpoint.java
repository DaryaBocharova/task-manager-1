package ru.stepanenko.tm.endpoint;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-05-06T20:37:00.399+03:00
 * Generated source version: 3.2.7
 *
 */
@WebService(targetNamespace = "http://endpoint.tm.stepanenko.ru/", name = "ProjectEndpoint")
@XmlSeeAlso({ObjectFactory.class})
public interface ProjectEndpoint {

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findAllProjectByUserIdRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findAllProjectByUserIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findAllProjectByUserId/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "findAllProjectByUserId", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.FindAllProjectByUserId")
    @ResponseWrapper(localName = "findAllProjectByUserIdResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.FindAllProjectByUserIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.stepanenko.tm.endpoint.Project> findAllProjectByUserId(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findAllProjectByPartOfNameOrDescriptionRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findAllProjectByPartOfNameOrDescriptionResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findAllProjectByPartOfNameOrDescription/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "findAllProjectByPartOfNameOrDescription", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.FindAllProjectByPartOfNameOrDescription")
    @ResponseWrapper(localName = "findAllProjectByPartOfNameOrDescriptionResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.FindAllProjectByPartOfNameOrDescriptionResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.stepanenko.tm.endpoint.Project> findAllProjectByPartOfNameOrDescription(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "")
        java.lang.String description
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/sortAllProjectByUserIdRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/sortAllProjectByUserIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/sortAllProjectByUserId/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "sortAllProjectByUserId", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.SortAllProjectByUserId")
    @ResponseWrapper(localName = "sortAllProjectByUserIdResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.SortAllProjectByUserIdResponse")
    @WebResult(name = "return", targetNamespace = "")
    public java.util.List<ru.stepanenko.tm.endpoint.Project> sortAllProjectByUserId(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session,
        @WebParam(name = "comparator", targetNamespace = "")
        java.lang.String comparator
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/createProjectRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/createProjectResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/createProject/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "createProject", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.CreateProject")
    @ResponseWrapper(localName = "createProjectResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.CreateProjectResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.stepanenko.tm.endpoint.Project createProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "")
        java.lang.String description
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/removeProjectRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/removeProjectResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/removeProject/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "removeProject", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.RemoveProject")
    @ResponseWrapper(localName = "removeProjectResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.RemoveProjectResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.stepanenko.tm.endpoint.Project removeProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session,
        @WebParam(name = "id", targetNamespace = "")
        java.lang.String id
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findOneProjectRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findOneProjectResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/findOneProject/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "findOneProject", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.FindOneProject")
    @ResponseWrapper(localName = "findOneProjectResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.FindOneProjectResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.stepanenko.tm.endpoint.Project findOneProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session,
        @WebParam(name = "id", targetNamespace = "")
        java.lang.String id
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/editProjectRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/editProjectResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/editProject/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "editProject", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.EditProject")
    @ResponseWrapper(localName = "editProjectResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.EditProjectResponse")
    @WebResult(name = "return", targetNamespace = "")
    public ru.stepanenko.tm.endpoint.Project editProject(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session,
        @WebParam(name = "id", targetNamespace = "")
        java.lang.String id,
        @WebParam(name = "name", targetNamespace = "")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "")
        java.lang.String description,
        @WebParam(name = "status", targetNamespace = "")
        java.lang.String status
    ) throws AuthenticationSecurityException_Exception;

    @WebMethod
    @Action(input = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/removeAllProjectByUserIdRequest", output = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/removeAllProjectByUserIdResponse", fault = {@FaultAction(className = AuthenticationSecurityException_Exception.class, value = "http://endpoint.tm.stepanenko.ru/ProjectEndpoint/removeAllProjectByUserId/Fault/AuthenticationSecurityException")})
    @RequestWrapper(localName = "removeAllProjectByUserId", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.RemoveAllProjectByUserId")
    @ResponseWrapper(localName = "removeAllProjectByUserIdResponse", targetNamespace = "http://endpoint.tm.stepanenko.ru/", className = "ru.stepanenko.tm.endpoint.RemoveAllProjectByUserIdResponse")
    public void removeAllProjectByUserId(
        @WebParam(name = "session", targetNamespace = "")
        ru.stepanenko.tm.endpoint.Session session
    ) throws AuthenticationSecurityException_Exception;
}
