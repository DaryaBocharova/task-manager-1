<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <error-page>
        <location>/error</location>
    </error-page>

    <!--<session-config>
        <session-timeout>60</session-timeout>
    </session-config>

    <filter>
        <filter-name>hazelcast-filter</filter-name>
        <filter-class>com.hazelcast.web.WebFilter</filter-class>
        &lt;!&ndash;
            Name of the distributed map storing
            your web session objects
        &ndash;&gt;
        <init-param>
            <param-name>map-name</param-name>
            <param-value>my-sessions</param-value>
        </init-param>
        &lt;!&ndash;
            How is your load-balancer configured?
            stick-session means all requests of a session
            is routed to the node where the session is first created.
            This is excellent for performance.
            If sticky-session is set to false, when a session is updated
            on a node, entry for this session on all other nodes is invalidated.
            You have to know how your load-balancer is configured before
            setting this parameter. Default is true.
        &ndash;&gt;
        <init-param>
            <param-name>sticky-session</param-name>
            <param-value>true</param-value>
        </init-param>
        &lt;!&ndash;
            Name of session id cookie
        &ndash;&gt;
        <init-param>
            <param-name>cookie-name</param-name>
            <param-value>hazelcast.sessionId</param-value>
        </init-param>
        &lt;!&ndash;
            Should cookie only be sent using a secure protocol? Default is false.
        &ndash;&gt;
        <init-param>
            <param-name>cookie-secure</param-name>
            <param-value>false</param-value>
        </init-param>
        &lt;!&ndash;
            Should HttpOnly attribute be set on cookie ? Default is false.
        &ndash;&gt;
        <init-param>
            <param-name>cookie-http-only</param-name>
            <param-value>false</param-value>
        </init-param>
        &lt;!&ndash;
            Are you debugging? Default is false.
        &ndash;&gt;
        <init-param>
            <param-name>debug</param-name>
            <param-value>true</param-value>
        </init-param>

        &lt;!&ndash;
            Do you want to connect as a client to an existing cluster?
            Default is false.
        &ndash;&gt;
        <init-param>
            <param-name>use-client</param-name>
            <param-value>false</param-value>
        </init-param>
        &lt;!&ndash;
            Client configuration location;
                * as servlet resource OR
                * as classpath resource OR
                * as URL
            Default is null.
        &ndash;&gt;
        &lt;!&ndash;
            Do you want to shutdown HazelcastInstance during
            web application undeploy process?
            Default is true.
        &ndash;&gt;
        <init-param>
            <param-name>shutdown-on-destroy</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>hazelcast-filter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <listener>
        <listener-class>com.hazelcast.web.SessionListener</listener-class>
    </listener>-->

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>
    <servlet>
        <servlet-name>faces</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>faces</servlet-name>
        <url-pattern>*.xhtml</url-pattern>
    </servlet-mapping>
    <welcome-file-list>
        <welcome-file>index.xhtml</welcome-file>
    </welcome-file-list>
    <context-param>
        <param-name>primefaces.THEME</param-name>
        <param-value>nova-light</param-value>
    </context-param>
</web-app>
